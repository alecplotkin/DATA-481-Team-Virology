library(xlsx)
data=read.xlsx('CT_training_PP1.xlsx',sheetIndex=1)
data
CT5=matrix(nrow=length,ncol=7)
CT6=matrix(nrow=length,ncol=8)
CT7=matrix(nrow=length,ncol=9)
i5=1
i6=1
i7=1
ind5=rep(0,length)
ind6=rep(0,length)
ind7=rep(0,length)
for(i in 1:length){#
	n=sum(is.na(data[i,]))#
	if(n==2){#
		CT5[i5,]=as.matrix(data[i,1:7])#
		ind5[i5]=i#
		i5=i5+1#
		}#
	if(n==1){#
		CT6[i6,]=as.matrix(data[i,1:8])#
		ind6[i6]=i#
		i6=i6+1#
		}#
	if(n==0){#
		CT7[i7,]=as.matrix(data[i,1:9])#
		ind7[i7]=i#
		i7=i7+1#
		}#
	}#
CT5=na.omit(CT5)#
CT6=na.omit(CT6)#
CT7=na.omit(CT7)#
ind5=ind5[ind5!=0]#
ind6=ind6[ind6!=0]#
ind7=ind7[ind7!=0]
eff5=ClusterEffs(CT5, c(16,64,256,1024,4096), Display = T)
eff6=ClusterEffs(CT6, c(4,16,64,256,1024,4096), Display = T)
eff7=ClusterEffs(CT7, c(1,4,16,64,256,1024,4096), Display = T)
data=read.xlsx('CT_training_PP1.xlsx',sheetIndex=1)#
head(data)
length=dim(data)[1]
head(data)
length
colnames(data)
data=read.xlsx('CT_training_PP1.xlsx',sheetIndex=1)#
head(data)#
colnames(data)#
length=dim(data)[1]#
length#
CT5=matrix(nrow=length,ncol=7) #
CT6=matrix(nrow=length,ncol=8) #
CT7=matrix(nrow=length,ncol=9) #
i5=1#
i6=1#
i7=1#
ind5=rep(0,length)#
ind6=rep(0,length)#
ind7=rep(0,length)#
for(i in 1:length){#
	n=sum(is.na(data[i,]))#
	if(n==2){#
		CT5[i5,]=as.matrix(data[i,1:7])#
		ind5[i5]=i#
		i5=i5+1#
		}#
	if(n==1){#
		CT6[i6,]=as.matrix(data[i,1:8])#
		ind6[i6]=i#
		i6=i6+1#
		}#
	if(n==0){#
		CT7[i7,]=as.matrix(data[i,1:9])#
		ind7[i7]=i#
		i7=i7+1#
		}#
	}#
CT5=na.omit(CT5)#
CT6=na.omit(CT6)#
CT7=na.omit(CT7)#
ind5=ind5[ind5!=0]#
ind6=ind6[ind6!=0]#
ind7=ind7[ind7!=0]
CT5=matrix(nrow=length,ncol=7) #
CT6=matrix(nrow=length,ncol=8) #
CT7=matrix(nrow=length,ncol=9) #
i5=1#
i6=1#
i7=1#
ind5=rep(0,length)#
ind6=rep(0,length)#
ind7=rep(0,length)#
for(i in 1:length){#
	n=sum(is.na(data[i,]))#
	if(n==2){#
		CT5[i5,]=as.matrix(data[i,1:7])#
		ind5[i5]=i#
		i5=i5+1#
		}#
	if(n==1){#
		CT6[i6,]=as.matrix(data[i,1:8])#
		ind6[i6]=i#
		i6=i6+1#
		}#
	if(n==0){#
		CT7[i7,]=as.matrix(data[i,1:9])#
		ind7[i7]=i#
		i7=i7+1#
		}#
	}
CT5=na.omit(CT5)#
CT6=na.omit(CT6)#
CT7=na.omit(CT7)
head(ind5)
ind5=ind5[ind5!=0]
ind6=ind6[ind6!=0]
ind7=ind7[ind7!=0]
head(CT5)
source('PEA3.r')
eff5=ClusterEffs(CT5, c(16,64,256,1024,4096), Display = T)#
eff6=ClusterEffs(CT6, c(4,16,64,256,1024,4096), Display = T)#
eff7=ClusterEffs(CT7, c(1,4,16,64,256,1024,4096), Display = T)
par(mfrow = c(3,1))#
eff5=ClusterEffs(CT5, c(16,64,256,1024,4096), Display = T)#
eff6=ClusterEffs(CT6, c(4,16,64,256,1024,4096), Display = T)#
eff7=ClusterEffs(CT7, c(1,4,16,64,256,1024,4096), Display = T)
head(eff5)
ind=c(ind5,ind6,ind7)#
primer=c(CT5[,2],CT6[,2],CT7[,2])#
eff=c(eff5,eff6,eff7)#
eff.matrix=cbind(primer,eff)#
eff.sorted=eff.matrix[order(ind),]#
eff.sorted
par(mfrow = c(1,1))
eff.sorted.frame[,"eff"] <- as.number(eff.sorted.frame[,"eff"])
eff.sorted.frame[,"eff"] <- number(eff.sorted.frame[,"eff"])
eff.sorted.frame[,"eff"] <- as.numeric(as.character(eff.sorted.frame[,"eff"]))
eff.sorted.frame[,"eff"]
eff.sorted.frame[,"eff"] <- numeric(eff.sorted.frame[,"eff"])
eff.sorted.frame[,"eff"] <- numeric(eff.sorted.frame[,2])
eff.sorted.frame[,"eff"] <- as.numeric(eff.sorted.frame[,2])
eff.sorted
summary(eff.sorted)
head(eff.sorted)
eff.sorted.frame <- as.data.frame(eff.sorted)
eff.sorted.frame[,"eff"] <- as.character(eff.sorted.frame[,2])
head(eff.sorted)#
eff.sorted.frame <- as.data.frame(eff.sorted)#
eff.sorted.frame[,"eff"] <- as.character(eff.sorted.frame[,"eff"])
eff.sorted.frame
eff.sorted.frame[,"eff"] <- as.numeric(eff.sorted.frame[,"eff"])
summary(eff.sorted.frame)
plot(density(eff.sorted.frame[,"eff"] ))
new.data=read.csv("toR_calcCT'_no60.csv")#
index=(new.data[,8]=='good') & ((new.data[,9]=='PP1'))#
new.data=new.data[index,]#
dim(new.data)#
CT=new.data[,10:25]#
scale=c(log2(as.numeric(eff.sorted[,2])))#
CT.prime=CT*scale#
new.sheet=cbind(eff.sorted[,1],CT.prime)#
write.xlsx(new.sheet,file='121412_OUTPUT-CT prime_PP1_no60.xlsx')
data=read.xlsx('CT_training_PP2.xlsx',sheetIndex=1)#
data#
length=dim(data)[1]#
#
CT5=matrix(nrow=length,ncol=7) #
CT6=matrix(nrow=length,ncol=8) #
CT7=matrix(nrow=length,ncol=9) #
i5=1#
i6=1#
i7=1#
ind5=rep(0,length)#
ind6=rep(0,length)#
ind7=rep(0,length)#
for(i in 1:length){#
	n=sum(is.na(data[i,]))#
	if(n==2){#
		CT5[i5,]=as.matrix(data[i,1:7])#
		ind5[i5]=i#
		i5=i5+1#
		}#
	if(n==1){#
		CT6[i6,]=as.matrix(data[i,1:8])#
		ind6[i6]=i#
		i6=i6+1#
		}#
	if(n==0){#
		CT7[i7,]=as.matrix(data[i,1:9])#
		ind7[i7]=i#
		i7=i7+1#
		}#
	}#
CT5=na.omit(CT5)#
CT6=na.omit(CT6)#
CT7=na.omit(CT7)#
ind5=ind5[ind5!=0]#
ind6=ind6[ind6!=0]#
ind7=ind7[ind7!=0]#
setwd('/Users/Tam/Desktop')#
source('PEA3.r')#
eff5=ClusterEffs(CT5, c(4096, 1024, 256, 64, 16), Display = T)#
eff6=ClusterEffs(CT6, c(4096, 1024, 256, 64, 16, 4), Display = T)#
eff7=ClusterEffs(CT7, c(4096, 1024, 256, 64, 16, 4, 1), Display = T)#
ind=c(ind5,ind6,ind7)#
primer=c(CT5[,2],CT6[,2],CT7[,2])#
eff=c(eff5,eff6,eff7)#
eff.matrix=cbind(primer,eff)#
eff.sorted=eff.matrix[order(ind),]#
eff.sorted#
new.data=read.csv("toR_calcCT'_no60.csv")#
index=(new.data[,8]=='good') & ((new.data[,9]=='PP2'))#
new.data=new.data[index,]#
dim(new.data)#
CT=new.data[,10:25]#
scale=c(log2(as.numeric(eff.sorted[,2])))#
CT.prime=CT*scale#
new.sheet=cbind(eff.sorted[,1],CT.prime)#
write.xlsx(new.sheet,file='121412_OUTPUT-CT prime_PP2_no60.xlsx')
